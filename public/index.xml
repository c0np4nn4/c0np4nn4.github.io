<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0">
    <channel>
      <title>🪴 c0np4nn4</title>
      <link>https://aurev01r.xyz</link>
      <description>최근 10 건 on 🪴 c0np4nn4</description>
      <generator>Quartz -- quartz.jzhao.xyz</generator>
      <item>
    <title>Sui, DApp Frontend</title>
    <link>https://aurev01r.xyz/Sui,-DApp-Frontend</link>
    <guid>https://aurev01r.xyz/Sui,-DApp-Frontend</guid>
    <description>1. Example yarn create @mysten/dapp --template react-client-dapp # &lt;ENTER&gt; cd my-first-sui-dapp yarn yarn dev 지갑을 연결해볼 수 있는 예제 사이트가 나옵니다. 2. 코드 분석 2-1.</description>
    <pubDate>Thu, 10 Oct 2024 17:31:37 GMT</pubDate>
  </item><item>
    <title>Drawing 2024-10-11 00.13.35.excalidraw</title>
    <link>https://aurev01r.xyz/Res/Excalidraw/Drawing-2024-10-11-00.13.35.excalidraw</link>
    <guid>https://aurev01r.xyz/Res/Excalidraw/Drawing-2024-10-11-00.13.35.excalidraw</guid>
    <description>⚠ Switch to EXCALIDRAW VIEW in the MORE OPTIONS menu of this document. ⚠ You can decompress Drawing data with the command palette: ‘Decompress current Excalidraw file’.</description>
    <pubDate>Thu, 10 Oct 2024 15:13:35 GMT</pubDate>
  </item><item>
    <title>Sui (로컬) DApp 개발 연습</title>
    <link>https://aurev01r.xyz/Notes/Sui-(%EB%A1%9C%EC%BB%AC)-DApp-%EA%B0%9C%EB%B0%9C-%EC%97%B0%EC%8A%B5</link>
    <guid>https://aurev01r.xyz/Notes/Sui-(%EB%A1%9C%EC%BB%AC)-DApp-%EA%B0%9C%EB%B0%9C-%EC%97%B0%EC%8A%B5</guid>
    <description>우선 아래와 같이 입력해 새로운 프로젝트를 생성합니다. sui move new my_frist_package 생성된 폴더인 my_first_package로 가보면 manifest file 인 Move.toml과 소스코드가 있는 sources 디렉토리가 있습니다. 1. Package 정의하기 sources/my_first_package.move 는 사실 아무런 기능을 하지 않습니다.</description>
    <pubDate>Thu, 10 Oct 2024 07:28:36 GMT</pubDate>
  </item><item>
    <title>Sui (로컬) 개발 환경 구축</title>
    <link>https://aurev01r.xyz/Notes/Sui-(%EB%A1%9C%EC%BB%AC)-%EA%B0%9C%EB%B0%9C-%ED%99%98%EA%B2%BD-%EA%B5%AC%EC%B6%95</link>
    <guid>https://aurev01r.xyz/Notes/Sui-(%EB%A1%9C%EC%BB%AC)-%EA%B0%9C%EB%B0%9C-%ED%99%98%EA%B2%BD-%EA%B5%AC%EC%B6%95</guid>
    <description>Docs 읽고 한글로 정리해두려고 합니다… TL;DR Tool, Sui 설치 Localnet 구동 sui start with options (faucet, regensis) Localnet &lt;&gt; CLI 연결 sui client &lt;env&gt; Localnet Account 생성 sui client &lt;address&gt; ...</description>
    <pubDate>Thu, 10 Oct 2024 05:27:53 GMT</pubDate>
  </item><item>
    <title>Ethernaut(0x03), Coin Flip</title>
    <link>https://aurev01r.xyz/Ethernaut/Ethernaut(0x03),-Coin-Flip</link>
    <guid>https://aurev01r.xyz/Ethernaut/Ethernaut(0x03),-Coin-Flip</guid>
    <description>Random인 척 하는 값을 이용한다고도 볼 수 있고. Random을 구현하기 힘듦을 나타내는 것이라고도 할 수 있고. 아무튼 그런 문제입니다. 초 심플한 문제입니다. flip() 함수 하나만 있는데, 플레이어가 할 일은 _guess 값을 제대로 넣는 것 밖에 없습니다. 솔직히 script 짜기 귀찮지만, 연습삼아 해보기로 했습니다.</description>
    <pubDate>Thu, 03 Oct 2024 19:56:18 GMT</pubDate>
  </item><item>
    <title>Ethernaut(0x02), Fal1out</title>
    <link>https://aurev01r.xyz/Ethernaut/Ethernaut(0x02),-Fal1out</link>
    <guid>https://aurev01r.xyz/Ethernaut/Ethernaut(0x02),-Fal1out</guid>
    <description>문제에 나와있듯이 ownership 을 획득하면 되는 문제입니다. 사실 코드를 좀 살펴보면, ***Factory.sol 에 풀이 완료 조건이 있긴 합니다. instance.owner() 와 현재 player 가 동일하다면 통과하는 로직입니다. owner 를 바꾸는 로직은 문제에서 /*constructor*/로 주석을 남긴 함수가 바로 보입니다.</description>
    <pubDate>Thu, 03 Oct 2024 19:45:49 GMT</pubDate>
  </item><item>
    <title>Ethernaut(0x01), Fallback</title>
    <link>https://aurev01r.xyz/Ethernaut/Ethernaut(0x01),-Fallback</link>
    <guid>https://aurev01r.xyz/Ethernaut/Ethernaut(0x01),-Fallback</guid>
    <description>소스코드부터 살펴보겠습니다. 이미지로 가져왔는데, 일일이 다 볼 필요는 없어서 그냥 전체 코드 양을 가늠하는 느낌으로 첨부해보았습니다. 사실 receive(), fallback() 함수가 어떤 것인지 살펴보면 되는 문제입니다. 코드는 함수 이름들에서 알 수 있듯이, 누구나 Ether를 기여(contribute)할 수 있고.</description>
    <pubDate>Thu, 03 Oct 2024 18:14:32 GMT</pubDate>
  </item><item>
    <title>Ethernaut(0x00), Hello Ethernaut</title>
    <link>https://aurev01r.xyz/Ethernaut/Ethernaut(0x00),-Hello-Ethernaut</link>
    <guid>https://aurev01r.xyz/Ethernaut/Ethernaut(0x00),-Hello-Ethernaut</guid>
    <description>시키는대로 따라하면 되는 단계입니다. 한때는 풀이를 와장창 적어보기도 했었습니다. 마치 ‘다음에 푸시는 분들도 참고해보세요’하는 식으로 말이죠. 물론 정답은 없겠습니다만, 이렇게 기록을 남기는 것은 내가 나중에 다시 봤을 때, 스스로 접근 방법을 기억할 수 있으면 좋겠다. 라는 마음으로 해나가는 것이 좋다고 생각합니다.</description>
    <pubDate>Thu, 03 Oct 2024 18:10:16 GMT</pubDate>
  </item><item>
    <title>Ethernaut, 로컬 풀이 환경구축</title>
    <link>https://aurev01r.xyz/Ethernaut/Ethernaut,-%EB%A1%9C%EC%BB%AC-%ED%92%80%EC%9D%B4-%ED%99%98%EA%B2%BD%EA%B5%AC%EC%B6%95</link>
    <guid>https://aurev01r.xyz/Ethernaut/Ethernaut,-%EB%A1%9C%EC%BB%AC-%ED%92%80%EC%9D%B4-%ED%99%98%EA%B2%BD%EA%B5%AC%EC%B6%95</guid>
    <description>Openzeppelin이 호스팅하고 있는 Ethernaut에서 문제를 직접 풀 수도 있겠지만, testnet인 sepolia를 이용해야 하므로 faucet을 통해 ETH를 받아와야 합니다. Faucet을 통하는 과정이 번거롭기도 하고, testnet이다보니 블록 생성까지 기다려야 하는 등 아무래도 문제 풀이에 불편함이 많습니다.</description>
    <pubDate>Thu, 03 Oct 2024 16:26:30 GMT</pubDate>
  </item><item>
    <title>Foundations of Data Availability Sampling</title>
    <link>https://aurev01r.xyz/Paper-Review/Data-Availability-Sampling</link>
    <guid>https://aurev01r.xyz/Paper-Review/Data-Availability-Sampling</guid>
    <description>Abstract 더욱 확장성을 가진 블록체인을 만드는 방향으로 나가면서, 몇년 전부터 DAS(Data Availability Sampling)이라는 접근법이 알려지기 시작했습니다. 심지어 이더리움과 같은 거대한 블록체인도 확장성 향상을 위해 결국 DAS를 배포할 계획을 하고 있습니다.</description>
    <pubDate>Tue, 17 Sep 2024 23:30:36 GMT</pubDate>
  </item>
    </channel>
  </rss>